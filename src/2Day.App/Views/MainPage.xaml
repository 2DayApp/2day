<Page
    x:Class="Chartreuse.Today.App.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Chartreuse.Today.App.ViewModel"
    xmlns:controls="using:Chartreuse.Today.App.Controls"
    xmlns:ui="using:Chartreuse.Today.App.Tools.UI"
    xmlns:behavior="using:Chartreuse.Today.App.Tools.Behavior"
    xmlns:tools="using:Chartreuse.Today.Core.Universal.Tools"
    xmlns:impl="using:Chartreuse.Today.Core.Shared.Model.Impl"
    xmlns:viewModel="using:Chartreuse.Today.App.Shared.ViewModel"
    mc:Ignorable="d"
    x:Name="pageRoot"
    d:DataContext="{d:DesignInstance vm:MainPageViewModel}">

    <Page.Resources>

        <DataTemplate x:Key="GridViewItemTemplate" x:DataType="impl:Task">
            <Border
                Padding="6"
                Background="{ThemeResource TaskNormalBackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource TaskBorderBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="33" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>

                    <!-- is late -->
                    <Border 
                        Grid.Row="0"
                        Grid.RowSpan="3"
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        Width="3"
                        Margin="-6,-6,0,-13"
                        Background="{StaticResource TaskLateBorderBrush}"
                        Visibility="{x:Bind Path=IsLate, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>

                    <!-- is completed -->
                    <CheckBox
                        x:Name="cbCompleted"
                        Style="{StaticResource TaskCheckBoxStyle}"
                        Margin="2,0,3,0"
                        IsChecked="{x:Bind Path=IsCompleted, Converter={StaticResource BooleanConverter}, Mode=OneWay}"
                        Command="{Binding ElementName=pageRoot, Path=DataContext.ToggleTaskCompletionCommand, Mode=OneTime}"
                        CommandParameter="{Binding}"/>

                    <!-- title -->
                    <Border
                        Grid.Row="0"
                        Grid.ColumnSpan="3"
                        Grid.Column="1"
                        Height="36">
                        <TextBlock
                            x:Name="tbTitle"
                            Text="{x:Bind Path=Title, Mode=OneWay}"
                            TextWrapping="WrapWholeWords"
                            TextTrimming="CharacterEllipsis"
                            MaxHeight="42"
                            ToolTipService.ToolTip="{x:Bind Path=Title, Mode=OneWay}"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Foreground="{x:Bind Path=IsCompleted, Converter={StaticResource TaskForegroundConverter}, Mode=OneWay}"
                            Margin="0,-6,0,0"
                            VerticalAlignment="Center"/>
                    </Border>

                    <!-- note -->
                    <TextBlock
                        x:Name="tbNote"
                        Grid.Column="0"
                        Grid.Row="1"
                        Grid.ColumnSpan="4"
                        Text="{x:Bind Path=DisplayNote, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind Path=DisplayNote, Mode=OneWay}"
                        TextTrimming="WordEllipsis"
                        Visibility="{x:Bind Path=HasDisplayNote, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                        FontSize="12"
                        Foreground="{StaticResource ForegroundHintBrush}"
                        VerticalAlignment="Center" />

                    <StackPanel
                        Grid.Column="0"
                        Grid.Row="2"
                        Grid.ColumnSpan="3" 
                        Orientation="Horizontal">
                        <!-- folder -->
                        <StackPanel 
                            Orientation="Horizontal"
                            Visibility="{Binding Path=DataContext.DisplayFolder, ElementName=GridViewTasks, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Ellipse 
                                Width="12" Height="12"
                                Fill="{x:Bind Path=Folder.Color, Mode=OneWay}"
                                Margin="0,2,0,0"
                                VerticalAlignment="Center"/>
                            <TextBlock 
                                Text="{x:Bind Path=Folder.Name, Mode=OneWay}"
                                Foreground="{x:Bind Path=Folder.Color, Mode=OneWay}"
                                Margin="3,0,3,0"
                                VerticalAlignment="Center"
                                FontSize="11"/>
                        </StackPanel>

                        <!-- has start date -->
                        <controls:IconText
                            Icon="CommonFlash"
                            Margin="3,5,3,0"
                            FontSize="18"
                            Opacity="0.4"
                            Visibility="{x:Bind Path=Start, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"
                            ToolTipService.ToolTip="{x:Bind Path=Start, Converter={StaticResource StartDateConverter}, Mode=OneWay}"/>

                        <!-- is recurring -->
                        <controls:IconText
                            x:Uid="TaskItemTooltip_Recurrence"
                            Icon="CommonRecurrence"
                            Visibility="{x:Bind Path=IsPeriodic, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                            ToolTipService.ToolTip="{x:Bind Path=FrequencyDescription, Mode=OneWay}"
                            Margin="3,0,3,0"
                            Opacity="0.4"
                            FontSize="20"/>

                        <!-- due date -->
                        <TextBlock
                            x:Name="tbDue"
                            Text="{x:Bind Path=Due, Converter={StaticResource ShortDateConverter}, Mode=OneWay}"
                            Visibility="{Binding Path=DataContext.DisplayDue, ElementName=GridViewTasks, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Margin="0,0,4,0"
                            FontSize="11"
                            Foreground="{StaticResource ForegroundHintBrush}"
                            VerticalAlignment="Center"/>

                        <!-- alarm -->
                        <controls:IconText
                            Icon="{x:Bind Path=Alarm,Converter={StaticResource AlarmIconConverter}, Mode=OneWay}"
                            Margin="3,0,3,0"
                            FontSize="20"
                            Opacity="0.4"
                            Visibility="{x:Bind Path=Alarm,Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"/>
                        <TextBlock
                            Margin="0,0,4,0"
                            FontSize="11"
                            Opacity="0.4"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource ForegroundHintBrush}"
                            Text="{x:Bind AlarmTime, Mode=OneWay}"
                            Visibility="{x:Bind AlarmTime, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}"/>

                        <!-- context -->
                        <TextBlock
                            Text="{x:Bind Path=Context.Name, Mode=OneWay}"
                            Visibility="{x:Bind Path=Context, Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}"
                            Margin="0,0,4,0"
                            FontSize="11"
                            Foreground="{StaticResource ForegroundHintBrush}"
                            VerticalAlignment="Center"/>

                        <!-- tags -->
                        <TextBlock
                            Text="{x:Bind Path=Tags, Mode=OneWay}"
                            Foreground="{StaticResource ApplicationAccentBrush}"
                            Margin="0,0,4,0"
                            FontSize="11"
                            VerticalAlignment="Center"/>

                        <!-- progress -->
                        <TextBlock
                            Text="{x:Bind Path=Progress, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:0%}', Mode=OneWay}"
                            Foreground="{StaticResource ForegroundHintBrush}"
                            Margin="0,0,4,0"
                            FontSize="11"
                            VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- subtasks -->
                    <Border
                        Grid.Row="2"
                        Grid.Column="2"
                        CornerRadius="2"
                        Margin="4,0,4,0"
                        Background="{StaticResource TaskBorderBrush}"
                        Visibility="{x:Bind Path=ChildrenDescriptor, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}">
                        <TextBlock 
                            Text="{x:Bind Path=ChildrenDescriptor, Mode=OneWay}"
                            FontSize="10"
                            Margin="4"
                            Foreground="{StaticResource ForegroundBrush}"
                            VerticalAlignment="Center"/>
                    </Border>
                    
                    <!-- priority -->
                    <controls:IconText
                        Grid.Row="2"
                        Grid.Column="3"
                        FontSize="20"
                        Margin="0,-4,0,0"
                        Icon="{x:Bind Path=Priority, Converter={StaticResource PriorityToIconConverter}, Mode=OneWay}"/>
                </Grid>
            </Border>
        </DataTemplate>

        <!-- exact same content as GridViewItemTemplate, changes: RowDefinitions (auto + max height) -->
        <DataTemplate x:Key="ListViewItemTemplate" x:DataType="impl:Task">
            <controls:SwipableListViewItem 
                LeftCommand="{Binding ElementName=pageRoot, Path=DataContext.ToggleTaskCompletionCommand, Mode=OneTime}">
                <controls:SwipableListViewItem.Content>
                    <Border
                        Padding="6"
                        Background="{ThemeResource TaskNormalBackgroundBrush}"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{StaticResource TaskBorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MaxHeight="20" />
                            </Grid.RowDefinitions>

                            <!-- is late -->
                            <Border
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Width="3"
                                Margin="-6,-6,0,-6"
                                Background="{StaticResource TaskLateBorderBrush}"
                                Visibility="{x:Bind Path=IsLate, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>

                            <!-- title -->
                            <TextBlock
                                x:Name="tbTitle"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Text="{x:Bind Path=Title, Mode=OneWay}"
                                TextWrapping="WrapWholeWords"
                                TextTrimming="CharacterEllipsis"
                                MaxHeight="42"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Foreground="{x:Bind Path=IsCompleted, Converter={StaticResource TaskForegroundConverter}, Mode=OneWay}"
                                Margin="0,-6,0,0"
                                VerticalAlignment="Center"/>

                            <!-- note -->
                            <TextBlock
                                x:Name="tbNote"
                                MaxHeight="20"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"                                
                                Text="{x:Bind Path=DisplayNote, Mode=OneWay}"
                                TextTrimming="WordEllipsis"
                                Visibility="{x:Bind Path=HasDisplayNote, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                FontSize="12"
                                Foreground="{StaticResource ForegroundHintBrush}"
                                VerticalAlignment="Center" />

                            <StackPanel
                                Grid.Row="2"
                                Grid.Column="0"
                                Orientation="Horizontal">
                                <!-- folder -->
                                <StackPanel 
                                    Orientation="Horizontal"
                                    Visibility="{Binding Path=DataContext.DisplayFolder, ElementName=GridViewTasks, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Ellipse 
                                        Width="12" Height="12"
                                        Fill="{x:Bind Path=Folder.Color, Mode=OneWay}"
                                        Margin="0,2,0,0"
                                        VerticalAlignment="Center"/>
                                    <TextBlock 
                                        Text="{x:Bind Path=Folder.Name, Mode=OneWay}"
                                        Foreground="{x:Bind Path=Folder.Color, Mode=OneWay}"
                                        Margin="3,0,3,0"
                                        VerticalAlignment="Center"
                                        FontSize="11"/>
                                </StackPanel>

                                <!-- has start date -->
                                <controls:IconText
                                    Icon="CommonFlash"
                                    Margin="3,5,3,0"
                                    FontSize="18"
                                    Opacity="0.4"
                                    Visibility="{x:Bind Path=Start, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"
                                    ToolTipService.ToolTip="{x:Bind Path=Start, Converter={StaticResource StartDateConverter}, Mode=OneWay}"/>

                                <!-- is recurring -->
                                <controls:IconText
                                    x:Uid="TaskItemTooltip_Recurrence"
                                    Icon="CommonRecurrence"
                                    Visibility="{x:Bind Path=IsPeriodic, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                    ToolTipService.ToolTip="{x:Bind Path=FrequencyDescription, Mode=OneWay}"
                                    Margin="3,0,3,0"
                                    Opacity="0.4"
                                    FontSize="20"/>

                                <!-- due date -->
                                <TextBlock
                                    x:Name="tbDue"
                                    Text="{x:Bind Path=Due, Converter={StaticResource ShortDateConverter}, Mode=OneWay}"
                                    Visibility="{Binding Path=DataContext.DisplayDue, ElementName=GridViewTasks, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Margin="0,0,4,0"
                                    FontSize="11"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    VerticalAlignment="Center"/>

                                <!-- alarm -->
                                <controls:IconText
                                    Icon="{x:Bind Path=Alarm,Converter={StaticResource AlarmIconConverter}, Mode=OneWay}"
                                    Margin="3,0,3,0"
                                    FontSize="20"
                                    Opacity="0.4"
                                    Visibility="{x:Bind Path=Alarm,Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"/>
                                <TextBlock
                                    Margin="0,0,4,0"
                                    FontSize="11"
                                    Opacity="0.4"
                                    VerticalAlignment="Center"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    Text="{x:Bind AlarmTime, Mode=OneWay}"
                                    Visibility="{x:Bind AlarmTime, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}"/>

                                <!-- context -->
                                <TextBlock
                                    Text="{x:Bind Path=Context.Name, Mode=OneWay}"
                                    Visibility="{x:Bind Path=Context, Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}"
                                    Margin="0,0,4,0"
                                    FontSize="11"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    VerticalAlignment="Center"/>

                                <!-- tags -->
                                <TextBlock
                                    Text="{x:Bind Path=Tags, Mode=OneWay}"
                                    Visibility="{x:Bind Path=Tags, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}"
                                    Foreground="{StaticResource ApplicationAccentBrush}"
                                    Margin="0,0,4,0"
                                    FontSize="11"
                                    VerticalAlignment="Center"/>

                                <!-- progress -->
                                <TextBlock
                                    Text="{x:Bind Path=Progress, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:0%}', Mode=OneWay}"
                                    Visibility="{x:Bind Path=Progress, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    Margin="0,0,4,0"
                                    FontSize="11"
                                    VerticalAlignment="Center"/>
                            </StackPanel>

                            <!-- subtasks -->
                            <Border
                                Grid.Row="2"
                                Grid.Column="1"
                                CornerRadius="2"
                                Margin="4,0,4,0"
                                Background="{StaticResource TaskBorderBrush}"
                                Visibility="{x:Bind Path=ChildrenDescriptor, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}">
                                <TextBlock 
                                    Text="{x:Bind Path=ChildrenDescriptor, Mode=OneWay}"
                                    FontSize="10"
                                    Margin="4"
                                    Foreground="{StaticResource ForegroundBrush}"
                                    VerticalAlignment="Center"/>
                            </Border>

                            <!-- priority -->
                            <controls:IconText
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="2"
                                VerticalAlignment="Bottom"
                                FontSize="20"
                                Margin="0,0,0,5"
                                Icon="{x:Bind Path=Priority, Converter={StaticResource PriorityToIconConverter}, Mode=OneWay}"/>
                        </Grid>
                    </Border>
                </controls:SwipableListViewItem.Content>
                <controls:SwipableListViewItem.LeftContent>
                    <Border Background="{x:Bind Path=IsCompleted, Converter={StaticResource TaskSwipeBackgroundConverter}, Mode=OneWay}">
                        <StackPanel Margin="10,0,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
                            <SymbolIcon Foreground="White" Symbol="Accept" Margin="0,0,10,0" VerticalAlignment="Center"/>
                            <TextBlock Foreground="White" Text="{x:Bind Path=IsCompleted, Converter={StaticResource CompleteTaskConverter}, Mode=OneWay}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </controls:SwipableListViewItem.LeftContent>
                <controls:SwipableListViewItem.RightContent>
                    <controls:ListViewActionBar/>
                </controls:SwipableListViewItem.RightContent>
            </controls:SwipableListViewItem>
        </DataTemplate>

        <DataTemplate x:Key="SeparatorItemTemplate">
            <Border
                Background="{StaticResource NavMenuSeparatorBrush}"
                Height="1"
                Margin="0,-5,0,-5"
                HorizontalAlignment="Stretch" />
        </DataTemplate>

        <DataTemplate x:Key="MenuItemTemplate" x:DataType="viewModel:MenuItemViewModel">
            <Grid Height="40" behavior:NavMenuItemFlyoutBehavior.IsContextMenuEnabled="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- selected border -->
                <Border 
                    Grid.Column="0"
                    Visibility="{x:Bind Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                    BorderThickness="0,1,0,1"
                    BorderBrush="{StaticResource NavMenuSelectedItemBorderBrush}"
                    Background="{StaticResource ApplicationAccentBrush}"/>
                <Border 
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Visibility="{x:Bind Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                    BorderBrush="{StaticResource NavMenuSelectedItemBorderBrush}"
                    BorderThickness="0,1,0,1"
                    Background="{StaticResource NavMenuSelectedItemBackgroundBrush}"/>

                <controls:IconText 
                    Grid.Column="1"
                    Margin="14,0,0,0"
                    VerticalAlignment="Center"
                    Icon="{x:Bind Path=Folder.IconId, Converter={StaticResource FolderToIconConverter}, Mode=OneWay}" 
                    Foreground="{x:Bind Path=Folder.Color, Mode=OneWay}" 
                    FontFamily="{StaticResource 2DaySymbolFamily}"
                    FontSize="22"
                    MinWidth="17"/>
                <TextBlock
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    Text="{x:Bind Path=Name, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis"
                    ToolTipService.ToolTip="{x:Bind Path=Name, Mode=OneWay}"
                    FontSize="14"
                    Foreground="{StaticResource ApplicationForegroundThemeBrush}"
                    VerticalAlignment="Center"
                    Margin="15,0,15,0"/>
                <controls:AnimatedTextBlock
                    Grid.Column="3"
                    Text="{x:Bind Path=SmartCollection.Count, Mode=OneWay}"
                    FontSize="14"
                    HorizontalAlignment="Right"
                    HorizontalContentAlignment="Right"
                    Foreground="{StaticResource ApplicationForegroundThemeBrush}"
                    Opacity="0.8"
                    VerticalAlignment="Center"
                    Margin="0,0,25,0" />
            </Grid>
        </DataTemplate>

        <ui:MenuItemTemplateSelector
            x:Key="MenuItemTemplateSelector"
            SeparatorTemplate="{StaticResource SeparatorItemTemplate}"
            ItemTemplate="{StaticResource MenuItemTemplate}"/>

    </Page.Resources>

    <Grid Style="{StaticResource EntranceTransitionPanelStyle}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="650" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode"                  Value="CompactInline" />
                        <Setter Target="BtnPrimaryHam.Visibility"               Value="Visible" />
                        <Setter Target="BtnSecondaryHam.Visibility"             Value="Collapsed" />
                        <Setter Target="GridViewTasks.Visibility"               Value="Visible" />
                        <Setter Target="ListViewTasks.Visibility"               Value="Collapsed" />
                        <Setter Target="AppBar.Visibility"                      Value="Collapsed"/>
                        <Setter Target="NavBarAutoSuggestBox.Visibility"        Value="Visible"/>
                        <Setter Target="HeaderBarAutoSuggestBox.Visibility"     Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode"                  Value="Overlay" />
                        <Setter Target="BtnSecondaryHam.Visibility"             Value="Visible" />
                        <Setter Target="GridViewTasks.Visibility"               Value="Collapsed" />
                        <Setter Target="ListViewTasks.Visibility"               Value="Visible" />
                        <Setter Target="PanelHeaderContent.HorizontalAlignment" Value="Center"/>
                        <Setter Target="AppBar.Visibility"                      Value="Visible"/>
                        <Setter Target="BorderSecondaryCommands.Visibility"     Value="Collapsed"/>
                        <Setter Target="BorderPrimaryCommands.Visibility"       Value="Collapsed"/>
                        <Setter Target="ContextualCommandWideBorder.Visibility"       Value="Collapsed"/>
                        <Setter Target="NavBarAutoSuggestBox.Visibility"        Value="Collapsed"/>
                        <Setter Target="HeaderBarAutoSuggestBox.Visibility"     Value="Visible"/> 
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:SwipeableSplitView x:Name="SplitView" OpenPaneLength="240" CompactPaneLength="48" DisplayMode="CompactInline" IsPaneOpen="true" IsTabStop="False">
            <controls:SwipeableSplitView.Pane>
                <!-- side content -->
                <Grid x:Name="SplitViewPane">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="1" Grid.RowSpan="4" Background="{StaticResource NavMenuBackgroundBrush}" BorderBrush="{StaticResource NavMenuBorderBrush}" BorderThickness="0,0,1,0"/>
                    <Border Grid.Row="0" Background="{StaticResource ApplicationAccentBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- a small hack to prevent keyboard from appearing in mobile when split view opens -->
                            <Button Opacity="0"/>
                            <Button 
                                    x:Name="BtnPrimaryHam" 
                                    Grid.Column="0" 
                                    Background="Transparent" 
                                    Margin="8,0,0,0"  
                                    Click="OnHamButtonClick">
                                <TextBlock 
                                        Text="" 
                                        FontFamily="Segoe MDL2 Assets" 
                                        FontSize="20"
                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}" 
                                        VerticalAlignment="Center"/>
                            </Button>
                            <AutoSuggestBox 
                                x:Name="NavBarAutoSuggestBox" 
                                QueryIcon="Find"
                                Grid.Column="1" 
                                PlaceholderText="{x:Bind Path=Strings.MainPage_SearchPlaceHolder}"/>
                        </Grid>
                    </Border>
                    <Border 
                            x:Name="BorderPrimaryCommands"                        
                            Grid.Row="2" 
                            Height="40"
                            Background="{StaticResource NavMenuSecondaryBackgroundBrush}" 
                            Margin="0,0,1,0" 
                            BorderThickness="0,0,0,1" 
                            BorderBrush="{StaticResource NavMenuBorderBrush}">
                        <StackPanel x:Name="StackPanelTopNavCommands" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button 
                                Command="{x:Bind Path=ViewModel.AddTaskCommand}" 
                                Style="{StaticResource AppImageButton}"
                                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_AddTask_Tooltip}">
                                <controls:IconText 
                                    Icon="CommonAdd" 
                                    Style="{StaticResource IconTextButtonStyle}"/>
                            </Button>
                            <Button 
                                Command="{x:Bind Path=ViewModel.SpeechCommand}" 
                                Style="{StaticResource AppImageButton}" 
                                Visibility="{x:Bind Path=ViewModel.IsSpeechRecognitionAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_Speech_Tooltip}">
                                <controls:IconText 
                                    Icon="CommonMic" 
                                    Style="{StaticResource IconTextButtonStyle}"/>
                            </Button>
                            <Button 
                                Command="{x:Bind Path=ViewModel.SyncCommand}" 
                                Style="{StaticResource AppImageButton}"
                                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_Sync_Tooltip}">
                                <controls:IconText 
                                    Icon="CommonRefresh" 
                                    Style="{StaticResource IconTextButtonStyle}"/>
                            </Button>
                        </StackPanel>
                    </Border>
                    <ListView 
                        Grid.Row="3"
                        Margin="0,-1,0,0"
                        x:Name="ListViewNavigation"
                        CanReorderItems="True"
                        AllowDrop="True"
                        ItemsSource="{x:Bind Path=ViewModel.MenuItems}" 
                        SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
                        ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                        ItemContainerStyle="{StaticResource NavMenuListViewItemStyle}"/>
                    <Border 
                        Grid.Row="4" 
                        x:Name="BorderSecondaryCommands"
                        Background="{StaticResource NavMenuSecondaryBackgroundBrush}" 
                        Margin="0,0,1,0"
                        BorderThickness="0,1,0,0"
                        BorderBrush="{StaticResource NavMenuBorderBrush}">
                        <StackPanel x:Name="StackPanelBottomNavCommands" HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button 
                                Style="{StaticResource AppImageButton}">
                                <controls:IconText Icon="CommonAddFolder" FontSize="25"/>
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            x:Uid="AppBar_AddView"
                                            Text="AppBar_AddView"
                                            Command="{x:Bind Path=ViewModel.AddViewCommand}"/>
                                        <MenuFlyoutItem
                                            x:Uid="AppBar_AddSmartView"
                                            Text="AppBar_AddSmartView"
                                            Command="{x:Bind Path=ViewModel.AddSmartViewCommand}"/>
                                        <MenuFlyoutItem
                                            x:Uid="AppBar_AddFolder"
                                            Text="AppBar_AddFolder"
                                            Command="{x:Bind Path=ViewModel.AddFolderCommand}"/>
                                        <MenuFlyoutItem
                                            x:Uid="AppBar_AddContext"
                                            Text="AppBar_AddContext"
                                            Command="{x:Bind Path=ViewModel.AddContextCommand}"/>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                            <Button 
                                Command="{x:Bind Path=ViewModel.OpenSettingsCommand}" 
                                Style="{StaticResource AppImageButton}">
                                <controls:IconText Icon="CommonConfigure" FontSize="25"/>
                            </Button>
                            <Button Style="{StaticResource AppImageButton}">
                                <SymbolIcon Symbol="More"/>
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                                x:Uid="AppBar_Print"
                                                Text="AppBar_Print"
                                                Command="{x:Bind Path=ViewModel.PrintCommand}"/>
                                        <MenuFlyoutItem
                                                x:Uid="AppBar_Share"
                                                Text="AppBar_Share"
                                                Command="{x:Bind Path=ViewModel.ShareCommand}"/>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                            <Button 
                                    Visibility="{x:Bind Path=ViewModel.ShowDebugCommand, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Style="{StaticResource AppImageButton}">
                                <controls:IconText Icon="CommonQuestion" FontSize="25"/>
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            Text="Debug page"
                                            Command="{x:Bind Path=ViewModel.OpenDebugCommand}"/>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </controls:SwipeableSplitView.Pane>
            <controls:SwipeableSplitView.Content>
                <!-- main content -->
                <Grid x:Name="SplitViewContent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- header -->
                    <Border Grid.Row="0" Background="{StaticResource ApplicationAccentBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!-- hamburger -->
                            <Button x:Name="BtnSecondaryHam" Grid.Column="0" HorizontalAlignment="Left" Background="Transparent" Click="OnHamButtonClick">
                                <TextBlock Text="" FontFamily="Segoe MDL2 Assets" FontSize="20"  Foreground="{StaticResource ApplicationWhiteForegroundBrush}" VerticalAlignment="Center"/>
                            </Button>

                            <AutoSuggestBox 
                                x:Name="HeaderBarAutoSuggestBox" 
                                Grid.Column="1"
                                QueryIcon="Find"
                                PlaceholderText="{x:Bind Path=Strings.MainPage_SearchPlaceHolder}"/>
                            <Border x:Name="HeaderBarAutoSuggestBoxBorderMask" Grid.Column="1" Background="{StaticResource ApplicationAccentBrush}" Margin="0,0,30,0"/>
                            
                            <Grid x:Name="PanelHeaderContent" Grid.Column="1" HorizontalAlignment="Left" Margin="0,0,3,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- sort icon -->
                                <Button Grid.Column="0"  Background="Transparent" behavior:SortFlyoutMenuItemBehavior.IsEnabled="True" Padding="8,4,8,6">
                                    <controls:IconText
                                        FontSize="22"
                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                                        Icon="{x:Bind Path=ViewModel.SelectedMenuItem.Folder.TaskGroup, Converter={StaticResource TaskGroupToIconConverter}, Mode=OneWay}"/>
                                </Button>
                                <!-- folder name & task count -->
                                <Button Grid.Column="1" Background="Transparent" Padding="4,4,4,4" Tapped="OnFolderNameTapped">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock 
                                            Grid.Column="0"
                                            Text="{x:Bind Path=ViewModel.SelectedMenuItem.Name, Mode=OneWay}" 
                                            TextTrimming="CharacterEllipsis"
                                            Foreground="{StaticResource ApplicationWhiteForegroundBrush}" 
                                            VerticalAlignment="Center"/>
                                        <controls:AnimatedTextBlock
                                            Grid.Column="1"
                                            Text="{x:Bind Path=ViewModel.SelectedMenuItem.SmartCollection.Count, Mode=OneWay}"
                                            Margin="4,0,0,0"
                                            FontSize="12"
                                            FontWeight="Normal"
                                            VerticalAlignment="Top"
                                            Foreground="{StaticResource ApplicationWhiteForegroundBrush}"/>
                                    </Grid>
                                </Button>
                            </Grid>
                            
                        </Grid>
                    </Border>

                    <!-- task lists -->
                    <Grid Grid.Row="1" Background="{StaticResource DefaultBackgroundBrush}" DataContext="{x:Bind Path=ViewModel.SelectedMenuItem, Mode=OneWay}">
                        <tools:TileCanvas 
                            ImageSource="{x:Bind Path=ViewModel.AppBackgroundPattern, Mode=OneWay}"
                            ImageOpacity="{x:Bind Path=ViewModel.AppBackgroundOpacity, Mode=OneWay}"/>

                        <GridView 
                            x:Name="GridViewTasks"
                            ItemsSource="{x:Bind Path=ViewModel.SelectedMenuItem.SmartCollection, Mode=OneWay, Converter={StaticResource CollectionViewConverter}}"
                            Style="{StaticResource GridViewStyle}"
                            ItemContainerStyle="{StaticResource GridViewItemContainerStyle}"
                            ItemTemplate="{StaticResource GridViewItemTemplate}"
                            IsItemClickEnabled="True"
                            SelectionMode="Multiple"
                            CanDragItems="True">
                            <GridView.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <Button Tapped="OnGridViewGroupHeaderTapped" Style="{StaticResource GroupHeaderButtonStyle}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </GridView.GroupStyle>
                            <GridView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsWrapGrid AllowDrop="True" Background="Transparent" ItemHeight="100" ItemWidth="230"/>
                                </ItemsPanelTemplate>
                            </GridView.ItemsPanel>
                        </GridView>

                        <ListView 
                            x:Name="ListViewTasks"
                            ItemsSource="{x:Bind Path=ViewModel.SelectedMenuItem.SmartCollection, Mode=OneWay, Converter={StaticResource CollectionViewConverter}}"
                            ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
                            ItemTemplate="{StaticResource ListViewItemTemplate}"
                            IsItemClickEnabled="True">
                            <ListView.GroupStyle>
                                <GroupStyle 
                                    HeaderContainerStyle="{StaticResource ListViewHeaderItemStyle}" 
                                    HeaderTemplate="{StaticResource ListViewGroupHeaderTemplate}"/>
                            </ListView.GroupStyle>
                            <ListView.Footer>
                                <StackPanel MinHeight="30">
                                    <Button 
                                        Style="{StaticResource ModernButtonStyle}"
                                        Margin="5"
                                        HorizontalContentAlignment="Center"
                                        Visibility="{x:Bind Path=ViewModel.SelectedMenuItem.HasContextualCommand, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" 
                                        Command="{x:Bind Path=ViewModel.SelectedMenuItem.ContextualCommand, Mode=OneWay}" 
                                        Content="{x:Bind Path=Strings.TaskList_RemoveCompleted, Mode=OneTime}"/>
                                </StackPanel>
                            </ListView.Footer>
                        </ListView>

                        <controls:EmptyListHint 
                                Visibility="{x:Bind Path=ViewModel.SelectedMenuItem.SmartCollection.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                Message="{x:Bind Path=ViewModel.SelectedMenuItem.Folder.EmptyHeader, Mode=OneWay}"
                                Hint="{x:Bind Path=ViewModel.SelectedMenuItem.Folder.EmptyHint, Mode=OneWay}"
                                Command="{x:Bind Path=ViewModel.AddTaskCommand}"/>

                        <Border
                            x:Name="ContextualCommandWideBorder"
                            Margin="6,0,0,0"
                            Padding="8,8,8,8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom">
                            <Button 
                                Style="{StaticResource ModernButtonStyle}"                                
                                HorizontalContentAlignment="Center"
                                Visibility="{x:Bind Path=ViewModel.SelectedMenuItem.HasContextualCommand, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" 
                                Command="{x:Bind Path=ViewModel.SelectedMenuItem.ContextualCommand, Mode=OneWay}" 
                                Content="{x:Bind Path=Strings.TaskList_RemoveCompleted, Mode=OneTime}"/>
                        </Border>
                        
                        <controls:GridViewActionBar 
                            x:Name="ContextualActionBar"
                            DataContext="{x:Bind Path=DataContext}" 
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Center"
                            PriorityMode="{x:Bind Path=ViewModel.SyncPrioritySupport, Mode=OneWay}"/>

                        <controls:ToastIndicator 
                            x:Name="ToastIndicator"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Stretch"/>
                    </Grid>
                </Grid>
            </controls:SwipeableSplitView.Content>
        </controls:SwipeableSplitView>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar x:Name="AppBar" Style="{StaticResource ModernCommandBarStyle}" Visibility="Collapsed">
            <AppBarButton 
                x:Uid="AppBar_Add"
                Label="AppBar_Add"
                Icon="Add" 
                Command="{x:Bind ViewModel.AddTaskCommand}"/>
            <AppBarButton 
                x:Uid="AppBar_Speech"
                Label="AppBar_Speech"
                Icon="Microphone" 
                Visibility="{x:Bind ViewModel.IsSpeechRecognitionAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{x:Bind ViewModel.QuickSpeechCommand}"/>
            <AppBarButton 
                x:Uid="AppBar_Sync"
                Label="AppBar_Sync"
                Icon="Sync" 
                Command="{x:Bind ViewModel.SyncCommand}"/>
            <CommandBar.SecondaryCommands>
                <AppBarButton 
                    Label="Debug"
                    Visibility="{x:Bind ViewModel.ShowDebugCommand, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{x:Bind ViewModel.OpenDebugCommand}"/>
                <AppBarButton 
                    x:Uid="AppBar_Add"
                    Label="AppBar_Add">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem
                                x:Uid="AppBar_AddView"
                                Text="AppBar_AddView"
                                Command="{x:Bind Path=ViewModel.AddViewCommand}"/>
                            <MenuFlyoutItem
                                x:Uid="AppBar_AddSmartView"
                                Text="AppBar_AddSmartView"
                                Command="{x:Bind Path=ViewModel.AddSmartViewCommand}"/>
                            <MenuFlyoutItem
                                x:Uid="AppBar_AddFolder"
                                Text="AppBar_AddFolder"
                                Command="{x:Bind Path=ViewModel.AddFolderCommand}"/>
                            <MenuFlyoutItem
                                x:Uid="AppBar_AddContext"
                                Text="AppBar_AddContext"
                                Command="{x:Bind Path=ViewModel.AddContextCommand}"/>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton 
                    Label="{x:Bind ViewModel.EditDescription, Mode=OneWay}"
                    Command="{x:Bind ViewModel.EditCommand}"/>
                <AppBarButton 
                    x:Uid="AppBar_ShareLabel"
                    Label="AppBar_ShareLabel"
                    Command="{x:Bind ViewModel.ShareCommand}"/>
                <AppBarButton 
                    x:Uid="AppBar_Settings"
                    Label="AppBar_Settings"
                    Command="{x:Bind ViewModel.OpenSettingsCommand}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
