<Page
    x:Class="Chartreuse.Today.App.Views.TaskPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Chartreuse.Today.App.Controls"
    xmlns:behavior="using:Chartreuse.Today.App.Tools.Behavior"
    xmlns:model="using:Chartreuse.Today.Core.Shared.Model"
    xmlns:model1="using:Chartreuse.Today.App.ViewModel.DesignTime.Model"
    xmlns:views="using:Chartreuse.Today.App.Views"
    xmlns:viewModel="using:Chartreuse.Today.App.Shared.ViewModel"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance model1:DesignTimeTaskViewModel, IsDesignTimeCreatable=True}">

    <Page.Resources>
        <Style x:Key="AnimatedItemsControl" TargetType="ItemsControl">
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <EntranceThemeTransition FromVerticalOffset="0" FromHorizontalOffset="30" IsStaggeringEnabled="True"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddElementButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonTextStyle}">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="45"/>
        </Style>
    </Page.Resources>    
        
    <Grid
        x:Name="root"
        Style="{StaticResource EntranceTransitionPanelStyle}"
        Background="{ThemeResource AppHubSectionBackgroundBrush}"
        BorderBrush="{StaticResource ApplicationAccentDarkerBrush}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Background="{StaticResource ApplicationAccentDarkerBrush}"
            MinHeight="50">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Text="{x:Bind Path=ViewModel.PageTitle, Converter={StaticResource TextUppercaseConverter}, Mode=OneWay}"
                        Style="{StaticResource PageHeaderTextBlockStyle}"/>
                    <controls:IconButton
                        Grid.Column="1"
                        Icon="CommonEdit"
                        Style="{StaticResource SemiLightIconButtonStyle}"
                        FontSize="26"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        Visibility="{Binding ShowUpdateDescription, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Text="{Binding CreationDescription}"
                        SecondaryText="{Binding ModificationDescription}" />
                    <controls:IconButton
                        Grid.Column="2"
                        Visibility="{Binding IsEdit, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                        Command="{Binding EditPreviousCommand, Mode=OneWay}"
                        Icon="CommonPrevious"
                        Style="{StaticResource SemiLightIconButtonStyle}"
                        FontSize="26"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        ToolTipService.ToolTip="Ctrl + Alt + Left"/>
                    <controls:IconButton
                        Grid.Column="3"
                        Visibility="{Binding IsEdit, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                        Command="{Binding EditNextCommand, Mode=OneWay}"
                        Icon="CommonNext"
                        Style="{StaticResource SemiLightIconButtonStyle}"
                        FontSize="26"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        ToolTipService.ToolTip="Ctrl + Alt + Right"/>
                </Grid>

                <!-- title -->
                <Grid Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="Auto" />
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="Auto" />
                        <ColumnDefinition
                            Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <CheckBox
                        Grid.Column="0"
                        Visibility="{Binding IsEdit, Converter={StaticResource BooleanToVisibilityConverter}}"
                        IsChecked="{Binding IsCompleted, Mode=TwoWay}"
                        Style="{StaticResource ModernCheckBoxNextTextBoxStyle2}"
                        VerticalAlignment="Top"
                        Margin="0" />
                    <TextBox
                        Grid.Column="1"
                        x:Uid="CreateEditTaskPage_TaskNamePlaceholder"
                        PlaceholderText="CreateEditTaskPage_TaskNamePlaceholder"
                        Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        behavior:TextBoxSoftKeyboardBehavior.IsEnabled="True"
                        Style="{StaticResource ModernTextBoxStyle}"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        SelectionHighlightColor="#CBD4D8"
                        Margin="0"
                        InputScope="Text"
                        IsSpellCheckEnabled="True"
                        IsTextPredictionEnabled="True" />
                    <controls:IconButton
                        BorderThickness="0,1,1,1"
                        Margin="0"
                        Grid.Column="2"
                        VerticalAlignment="Top"
                        Command="{Binding OpenLinkCommand}"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        Visibility="{Binding HasLink, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Icon="CommonEdge" />
                    <controls:IconButton
                        BorderThickness="0,1,1,1"
                        Margin="0"
                        Grid.Column="3"
                        VerticalAlignment="Top"
                        Command="{Binding StartSpeechTitleCommand}"
                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                        Visibility="{Binding IsSpeechRecognitionAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Icon="CommonMic" />
                </Grid>
            </StackPanel>

        </Border>

        <ScrollViewer Grid.Row="1" x:Name="ScrollViewer">
            <StackPanel>

                <Grid
                    x:Name="GridQuickAdd"
                    Margin="0,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--due date-->
                    <Button
                        x:Name="BtnAddDueDate"
                        Grid.Row="0"
                        Grid.Column="0"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,1,1,1"
                        Content="{x:Bind Path=Strings.TaskPage_DueDate, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:DateTimePicker2
                                        x:Name="BtnAddDueDateFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        ShowTime="False"
                                        Date="{x:Bind Path=ViewModel.DueDate, Mode=TwoWay}" />
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!--start date-->
                    <Button
                        x:Name="BtnAddStartDate"
                        Grid.Row="0"
                        Grid.Column="1"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,1,1,1"
                        Content="{x:Bind Path=Strings.TaskPage_StartDate, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:DateTimePicker2
                                        x:Name="BtnAddStartDateFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        PickDefaultTime="True"
                                        Date="{Binding StartDate, Mode=TwoWay}"
                                        Time="{Binding StartTime, Mode=TwoWay}"
                                        HasTime="{Binding HasStartTime}" />
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!--reminder-->
                    <Button
                        x:Name="BtnAddReminder"
                        Grid.Row="0"
                        Grid.Column="2"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,1,1,1"
                        Content="{x:Bind Path=Strings.TaskPage_Reminder, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:DateTimePicker2
                                        x:Name="BtnAddReminderFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        PickDefaultTime="True"
                                        Date="{Binding ReminderDate, Mode=TwoWay}"
                                        Time="{Binding ReminderTime, Mode=TwoWay}"
                                        HasTime="{Binding HasReminderTime}" />
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- frequency -->
                    <Button
                        x:Name="BtnAddFrequency"
                        Grid.Row="0"
                        Grid.Column="3"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,1,0,1"
                        Content="{x:Bind Path=Strings.TaskPage_Frequency, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:FrequencyPicker2 
                                        x:Name="BtnAddFrequencyFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="10"/>
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!--progress-->
                    <Button
                        x:Name="BtnAddProgress"
                        Grid.Row="1"
                        Grid.Column="0"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,0,1,0"
                        Content="{x:Bind Path=Strings.TaskPage_Progress, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:ProgressPicker
                                        x:Name="BtnAddProgressFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        Progress="{x:Bind Path=ViewModel.Progress, Mode=TwoWay}" />
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- tags -->
                    <Button
                        x:Name="BtnAddTags"
                        Grid.Row="1"
                        Grid.Column="1"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,0,1,0"
                        Content="{x:Bind Path=Strings.TaskPage_Tag, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <Grid 
                                        x:Name="BtnAddTagsFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        VerticalAlignment="Center">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <AutoSuggestBox
                                                Grid.Column="0"
                                                KeyUp="OnAutoCompleteBoxTagKeyUp"
                                                Text="{Binding Path=CurrentTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                PlaceholderText="{x:Bind Path=Strings.EditTag_Placeholder}"
                                                behavior:FilterAutoSuggestBox.SuggestionsSource="{Binding PossibleTags}"
                                                QuerySubmitted="OnAutoSuggestTagQuerySubmitted"
                                                Style="{StaticResource ModernAutoSuggestBoxStyle}" />
                                            <controls:IconButton    
                                                Grid.Column="1"
                                                BorderThickness="0,1,1,1"
                                                Command="{Binding AddTagCommand}"
                                                Icon="CommonAdd"
                                                behavior:CloseFlyoutOnTap.IsEnabled="True"/>
                                        </Grid>
                                        <ScrollViewer 
                                            x:Name="ScrollViewerTags"
                                            Grid.Row="1"
                                            HorizontalScrollBarVisibility="Disabled"
                                            VerticalScrollBarVisibility="Auto">
                                            <ItemsControl 
                                                Margin="0,0,0,0"
                                                ItemsSource="{x:Bind Path=ViewModel.AvailableTags, Mode=OneWay}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <controls:WrapPanel/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate x:DataType="viewModel:ItemCountViewModel">
                                                        <Button 
                                                            Style="{StaticResource EmptyButtonStyle}"
                                                            Tapped="OnButtonAddTagTapped"
                                                            CommandParameter="{x:Bind Path=Name, Mode=OneWay}">
                                                            <Border
                                                                Margin="0,8,8,8"
                                                                Background="{StaticResource ApplicationAccentBrush}"
                                                                CornerRadius="2">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock
                                                                        Grid.Column="0"
                                                                        Text="{x:Bind Path=Name, Mode=OneWay}"
                                                                        TextTrimming="CharacterEllipsis"
                                                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                                                                        MaxWidth="290"
                                                                        FontSize="14"
                                                                        Margin="6,2,6,4"
                                                                        VerticalAlignment="Center" />
                                                                    <TextBlock 
                                                                        Grid.Column="1"
                                                                        Text="x"
                                                                        FontSize="12"
                                                                        Opacity="0.7"
                                                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                                                                        Margin="0,2,0,4"
                                                                        VerticalAlignment="Center"/>
                                                                    <TextBlock 
                                                                        Grid.Column="2"
                                                                        FontSize="12"
                                                                        Opacity="0.7"
                                                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"                                                                        
                                                                        Margin="0,2,6,4"
                                                                        Text="{x:Bind Path=UsageCount, Mode=OneWay}"
                                                                        VerticalAlignment="Center"/>
                                                                </Grid>
                                                            </Border>
                                                        </Button>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- context -->
                    <Button
                        x:Name="BtnAddContext"
                        Grid.Row="1"
                        Grid.Column="2"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,0,1,0"
                        Content="{x:Bind Path=Strings.TaskPage_Context, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:GridViewPopupContent
                                        x:Name="BtnAddContextFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        ItemsSource="{x:Bind Path=ViewModel.RealContexts, Mode=OneWay}"
                                        SelectedItem="{Binding TargetContext, Mode=TwoWay}"
                                        ItemTemplate="{StaticResource ComboBoxFolderItemDropDownTemplate}" 
                                        CreateItemCommand="{x:Bind Path=ViewModel.AddContextCommand, Mode=OneWay}"
                                        CreateItemText="{x:Bind Path=Strings.AddContext_Title}"/>
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- subtasks -->
                    <Button
                        x:Name="BtnAddSubtask"
                        Grid.Row="1"
                        Grid.Column="3"
                        Style="{StaticResource AddElementButtonStyle}"
                        BorderThickness="0,0,0,0"
                        Content="{x:Bind Path=Strings.TaskPage_SubTask, Converter={StaticResource StringPlusConverter}}">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <Grid 
                                        Margin="14"
                                        x:Name="BtnAddSubtaskFlyoutContent"
                                        x:DeferLoadStrategy="Lazy">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox
                                            Text="{Binding Path=SubtaskTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            KeyUp="OnTextBoxSubTaskKeyUp"
                                            behavior:AutoFocusTextBox.IsEnabled="True"
                                            PlaceholderText="{x:Bind Path=Strings.TaskPage_TaskNamePlaceholder}"
                                            Style="{StaticResource ModernTextBoxStyle}"
                                            VerticalAlignment="Center"
                                            Grid.Column="0" />
                                        <controls:IconButton
                                            Grid.Column="1"
                                            Icon="CommonAdd"
                                            BorderThickness="0,1,1,1"
                                            Command="{x:Bind Path=ViewModel.AddSubtaskCommand, Mode=OneWay}"
                                            behavior:CloseFlyoutOnTap.IsEnabled="True"/>
                                    </Grid>
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- FAKE folder -->
                    <Button
                        x:Name="BtnFolder"
                        Visibility="Collapsed">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:GridViewPopupContent
                                        x:Name="BtnFolderFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        ItemsSource="{Binding Folders}"
                                        SelectedItem="{Binding TargetFolder, Mode=TwoWay}"
                                        ItemTemplate="{StaticResource ComboBoxFolderItemDropDownTemplate}"
                                        CreateItemCommand="{x:Bind Path=ViewModel.AddFolderCommand, Mode=OneWay}"
                                        CreateItemText="{x:Bind Path=Strings.CreateFolderPage_Title}"/>
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                    <!-- FAKE priority -->
                    <Button
                        x:Name="BtnPriority"
                        Visibility="Collapsed">
                        <controls:ExtendedFlyout.Flyout>
                            <controls:AppFlyout>
                                <Border>
                                    <controls:PriorityPicker
                                        x:Name="BtnPriorityFlyoutContent"
                                        x:DeferLoadStrategy="Lazy"
                                        Margin="14"
                                        SelectedPriority="{x:Bind Path=ViewModel.Priority, Mode=TwoWay}"
                                        Mode="{x:Bind Path=ViewModel.SyncPrioritySupport, Mode=OneWay}" />
                                </Border>
                            </controls:AppFlyout>
                        </controls:ExtendedFlyout.Flyout>
                    </Button>

                </Grid>

                <ItemsControl
                    x:Name="ItemsControlEntries"
                    Style="{StaticResource AnimatedItemsControl}"
                    Margin="0,-1,0,0">

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Folder"
                        Text="CreateEditTaskPage_Folder"
                        Icon="{x:Bind Path=ViewModel.TargetFolder.IconId, Converter={StaticResource FolderToIconConverter}, Mode=OneWay}"
                        IconForeground="{x:Bind Path=ViewModel.TargetFolder.Color, Mode=OneWay}"
                        IsVisible="True"
                        SourceButton="{x:Bind Path=BtnFolder}"
                        Description="{x:Bind Path=ViewModel.TargetFolder.Name, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Priority"
                        Text="CreateEditTaskPage_Priority"
                        IsVisible="True"
                        Icon="{x:Bind Path=ViewModel.Priority, Converter={StaticResource PriorityToIconConverter}, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnPriority}"
                        Description="{x:Bind Path=ViewModel.PriorityText, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Context"
                        Text="CreateEditTaskPage_Context"
                        Icon="Folder14"
                        IsVisible="{x:Bind Path=ViewModel.HasContext, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.TargetContext.Name, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddContext}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearContextCommand, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Due"
                        Text="CreateEditTaskPage_Due"
                        Icon="Folder07"
                        IsVisible="{x:Bind Path=ViewModel.HasDueDate, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.DueDateLong, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddDueDate}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearDueDateCommand, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_StartDate"
                        Text="CreateEditTaskPage_StartDate"
                        Icon="View11"
                        IsVisible="{x:Bind Path=ViewModel.HasStartDate, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.StartDateLong, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddStartDate}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearStartDateCommand, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Reminder"
                        Text="CreateEditTaskPage_Reminder"
                        Icon="View09"
                        IsVisible="{x:Bind Path=ViewModel.HasReminder, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.ReminderLong, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddReminder}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearReminderCommand, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Frequency"
                        Text="CreateEditTaskPage_Frequency"
                        Icon="CommonRecurrence"
                        IsVisible="{x:Bind Path=ViewModel.HasFrequency, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.FrequencyText, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddFrequency}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearFrequencyCommand, Mode=OneWay}"/>

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Progress"
                        Text="CreateEditTaskPage_Progress"
                        Icon="GroupProgress"
                        IsVisible="{x:Bind Path=ViewModel.HasProgress, Mode=OneWay}"
                        Description="{x:Bind Path=ViewModel.Progress, Mode=OneWay, Converter={StaticResource TaskProgressConverter}}"
                        SourceButton="{x:Bind Path=BtnAddProgress}"
                        SecondaryCommand="{x:Bind Path=ViewModel.ClearProgressCommand, Mode=OneWay}" />

                    <controls:TaskFieldEntry
                        x:Uid="CreateEditTaskPage_Tags"
                        Text="CreateEditTaskPage_Tags"
                        Icon="Folder42"
                        IsVisible="{x:Bind Path=ViewModel.HasTags, Mode=OneWay}"
                        SourceButton="{x:Bind Path=BtnAddTags}">
                        <controls:TaskFieldEntry.InnerContent>
                            <ItemsControl 
                                Style="{StaticResource AnimatedItemsControl}"
                                ItemsSource="{x:Bind Path=ViewModel.Tags, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border
                                                Grid.Column="0"
                                                Margin="0,8,0,8"
                                                Background="{StaticResource ApplicationAccentBrush}"
                                                CornerRadius="2,0,0,2"
                                                Padding="4">
                                                <TextBlock
                                                    Text="{Binding Mode=OneTime}"
                                                    TextTrimming="CharacterEllipsis"
                                                    Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                                                    MaxWidth="290"
                                                    FontSize="14"
                                                    Margin="0,-2,0,0"
                                                    VerticalAlignment="Center" />
                                            </Border>
                                            <Button 
                                                Grid.Column="1" 
                                                Style="{StaticResource EmptyButtonStyle}"
                                                Command="{Binding ElementName=root, Path=DataContext.DeleteTagCommand, Mode=OneTime}"
                                                CommandParameter="{Binding Mode=OneTime}">
                                                <Border
                                                    Margin="0,8,8,8"
                                                    Background="{StaticResource ApplicationAccentBrush}"
                                                    Opacity="0.5"
                                                    CornerRadius="0,2,2,0"
                                                    Padding="4">
                                                    <TextBlock
                                                        Text="x"
                                                        Foreground="{StaticResource ApplicationWhiteForegroundBrush}"
                                                        FontSize="14"
                                                        Margin="2,-2,2,0"
                                                        VerticalAlignment="Center" />
                                                </Border>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <controls:WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </controls:TaskFieldEntry.InnerContent>
                    </controls:TaskFieldEntry>

                    <controls:TaskFieldEntry
                        Text="{x:Bind Path=Strings.TaskPage_SubTasks}"
                        IsVisible="{x:Bind Path=ViewModel.HasSubtasks, Mode=OneWay}"
                        Icon="Folder34">
                        <controls:TaskFieldEntry.InnerContent>
                            <ItemsControl
                                Style="{StaticResource AnimatedItemsControl}"
                                Margin="0,10,0,0"
                                ItemsSource="{x:Bind Path=ViewModel.Subtasks, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="model:ITask">
                                        <Grid Margin="0,-10,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <CheckBox
                                                Grid.Column="0"
                                                MinWidth="0"
                                                IsChecked="{Binding Path=IsCompleted, Mode=TwoWay}"
                                                VerticalAlignment="Center"/>
                                            <TextBox
                                                Grid.Column="1"
                                                HorizontalAlignment="Stretch"
                                                TextWrapping="Wrap"
                                                Margin="0,8,4,8"
                                                Padding="6,6,6,0"
                                                Height="Auto"
                                                Text="{x:Bind Path=Title, Mode=TwoWay}" />
                                            <controls:IconButton
                                                Grid.Column="2"
                                                VerticalAlignment="Center"
                                                Icon="CommonClear"
                                                BorderThickness="0"
                                                Background="Transparent"
                                                FontSize="20"
                                                Opacity="0.2"
                                                Margin="0"
                                                Command="{Binding ElementName=root, Path=DataContext.DeleteSubtaskCommand, Mode=OneTime}"
                                                CommandParameter="{Binding}" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </controls:TaskFieldEntry.InnerContent>
                    </controls:TaskFieldEntry>

                    <controls:TaskFieldEntry
                        Text="Notes"
                        IsVisible="True"
                        Icon="Folder36"
                        SecondaryIcon="CommonExpand"
                        SecondaryCommand="{x:Bind Path=ViewModel.OpenNotesCommand, Mode=OneWay}"/>
                </ItemsControl>

                <controls:NotesEditor
                    x:Name="NotesEditor"
                    Margin="0,-10,0,0"
                    MinHeight="100"
                    TaskViewModel="{x:Bind Path=ViewModel, Mode=OneWay}"/>

            </StackPanel>
        </ScrollViewer>
        
        <controls:FlyoutAppBar Grid.Row="2"/>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar
            x:Name="CommandBar"
            Style="{StaticResource ModernCommandBarStyle}">
            <AppBarButton
                Icon="Accept"
                Label="{x:Bind Path=Strings.Action_Save}"
                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_Save_Tooltip}"
                Command="{x:Bind Path=ViewModel.SaveCommand, Mode=OneWay}" />
            <AppBarButton
                Icon="Phone"
                Label="{x:Bind Path=ViewModel.PhoneNumber, Mode=OneWay}"
                Foreground="{StaticResource ApplicationToastInfoBrush}"
                Command="{x:Bind Path=ViewModel.CallPhoneNumberCommand, Mode=OneWay}"
                Visibility="{x:Bind Path=ViewModel.HasCallAction, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
            <AppBarButton
                Label="{x:Bind Path=Strings.Action_SaveAndContinue}"
                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_SaveAndContinue_Tooltip}"
                Command="{x:Bind Path=ViewModel.QuickAddCommand, Mode=OneWay}"
                Visibility="{x:Bind Path=ViewModel.CanQuickAdd, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon
                        FontFamily="{StaticResource 2DaySymbolFamily}"
                        Glyph="&#xE021;"
                        FontSize="26" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton
                Icon="{x:Bind Path=ViewModel.IsPinned, Converter={StaticResource PinIconConverter}, Mode=OneWay}"
                Label="{x:Bind Path=ViewModel.PinDescription, Mode=OneWay}"
                ToolTipService.ToolTip="{x:Bind Path=ViewModel.PinDescription, Mode=OneWay}"
                Command="{x:Bind Path=ViewModel.PinCommand, Mode=OneWay}"
                Visibility="{x:Bind Path=ViewModel.CanPin, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
            <AppBarButton
                Icon="Delete"
                Label="{x:Bind Path=Strings.Action_Delete}"
                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_Delete}"
                Command="{x:Bind Path=ViewModel.DeleteCommand, Mode=OneWay}"
                Visibility="{x:Bind Path=ViewModel.CanDelete, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
            <AppBarButton
                Icon="Cancel"
                Label="{x:Bind Path=Strings.Action_Cancel}"
                ToolTipService.ToolTip="{x:Bind Path=Strings.Action_Cancel_Toolip}"
                Command="{x:Bind Path=ViewModel.GoBackCommand, Mode=OneWay}" />
        </CommandBar>
    </Page.BottomAppBar>
</Page>        