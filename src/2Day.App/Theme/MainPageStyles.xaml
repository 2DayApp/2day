<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Chartreuse.Today.App.Controls"
    xmlns:behavior="using:Chartreuse.Today.App.Tools.Behavior">
        
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="EntranceTransitionPanelStyle" TargetType="Panel">
        <Setter Property="ChildrenTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <EntranceThemeTransition FromVerticalOffset="0" FromHorizontalOffset="20"/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppImageButton" TargetType="Button">
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="MinWidth" Value="35"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="PART_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="PART_Root"/>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Background" Background="{StaticResource ApplicationForegroundThemeBrush}" Opacity="0"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="IconTextButtonStyle" TargetType="controls:IconText" BasedOn="{StaticResource IconTextDefaultStyle}">
        <Setter Property="FontSize" Value="25"/>
    </Style>
    
    <Style x:Key="GridViewStyle" TargetType="GridView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridView">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                        <ScrollViewer 
                            x:Name="ScrollViewer" 
                            AutomationProperties.AccessibilityView="Raw" 
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" 
                            HorizontalScrollMode="Enabled" 
                            HorizontalScrollBarVisibility="Auto" 
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" 
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" 
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" 
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" 
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" 
                            TabNavigation="{TemplateBinding TabNavigation}" 
                            VerticalScrollBarVisibility="Disabled" 
                            VerticalScrollMode="Disabled" 
                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                            <Grid>
                                <Border 
                                    Height="40" 
                                    Background="{StaticResource NavMenuSecondaryBackgroundBrush}" 
                                    BorderThickness="0,0,0,1" 
                                    BorderBrush="{StaticResource NavMenuBorderBrush}" 
                                    VerticalAlignment="Top"/>
                                <Border 
                                    x:Name="dragDropFeedbackHost" 
                                    Background="Transparent" 
                                    AllowDrop="True"/>
                                <ItemsPresenter 
                                    FooterTransitions="{TemplateBinding FooterTransitions}" 
                                    FooterTemplate="{TemplateBinding FooterTemplate}" 
                                    Footer="{TemplateBinding Footer}" 
                                    HeaderTemplate="{TemplateBinding HeaderTemplate}" 
                                    Header="{TemplateBinding Header}" 
                                    HeaderTransitions="{TemplateBinding HeaderTransitions}" 
                                    Padding="{TemplateBinding Padding}"
                                    Margin="4,0,0,0"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GridViewItemContainerStyle" TargetType="GridViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,2,2"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <ListViewItemPresenter 
                        CheckBrush="{ThemeResource TaskNormalBackgroundBrush}" 
                        CheckMode="Overlay" 
                        ContentMargin="2" 
                        ContentTransitions="{TemplateBinding ContentTransitions}" 
                        DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" 
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                        DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                        FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" 
                        FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" 
                        PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" 
                        PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}" 
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" 
                        PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}" 
                        ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" 
                        SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}" 
                        SelectionCheckMarkVisualEnabled="True" 
                        SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" 
                        SelectedPointerOverBackground="{ThemeResource HeaderBackgroundBrush}" 
                        SelectedBackground="{ThemeResource HeaderBackgroundBrush}" 
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="GridViewHeaderItem">
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewHeaderItem">
                    <ContentPresenter
                        x:Name="ContentPresenter" 
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        ContentTransitions="{TemplateBinding ContentTransitions}" 
                        Content="{TemplateBinding Content}" 
                        HorizontalContentAlignment="Stretch"
                        HorizontalAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Name="GroupHeaderButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource TaskGroupForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="220"/>
        <Setter Property="Margin" Value="-5,0,20,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="PART_Root" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{StaticResource NavMenuBorderBrush}" 
                        Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="PART_Root"/>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="PART_Background" Background="{StaticResource ApplicationForegroundThemeBrush}" Opacity="0" Margin="0,0,-15,0"/>
                            <Grid VerticalAlignment="Center" Margin="8,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Text="{Binding Title, Converter={StaticResource GroupHeaderTitleConverter}}"
                                    FontSize="11"
                                    FontWeight="SemiLight"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    Opacity="0.7"
                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource StringVisibilityConverter}}"/>
                                <StackPanel
                                    Grid.Row="1"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding Title, Converter={StaticResource GroupHeaderTitleConverter}, ConverterParameter=Main}"
                                        FontSize="14"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource ApplicationForegroundThemeBrush}"/>
                                    <controls:AnimatedTextBlock
                                        Text="{Binding Count}"
                                        FontSize="14"
                                        Margin="5,0,0,0"
                                        FontWeight="SemiBold"
                                        Foreground="{StaticResource ApplicationAccentBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- same as GroupHeaderButtonStyle but target ContentControl -->
    <Style x:Name="GroupHeaderContentControlStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource TaskGroupForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="220"/>
        <Setter Property="Margin" Value="-5,0,20,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border 
                        x:Name="PART_Root" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{StaticResource NavMenuBorderBrush}" 
                        Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="PART_Root"/>
                                        <DoubleAnimation Duration="0:0:0.09" From="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Background"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="PART_Background" Background="{StaticResource ApplicationForegroundThemeBrush}" Opacity="0" Margin="0,0,-15,0"/>
                            <Grid VerticalAlignment="Center" Margin="8,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Text="{Binding Title, Converter={StaticResource GroupHeaderTitleConverter}}"
                                    FontSize="11"
                                    FontWeight="SemiLight"
                                    Foreground="{StaticResource ForegroundHintBrush}"
                                    Opacity="0.7"
                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource StringVisibilityConverter}}"/>
                                <StackPanel
                                    Grid.Row="1"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Text="{Binding Title, Converter={StaticResource GroupHeaderTitleConverter}, ConverterParameter=Main}"
                                        FontSize="14"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource ApplicationForegroundThemeBrush}"/>
                                    <controls:AnimatedTextBlock
                                        Text="{Binding Count}"
                                        FontSize="14"
                                        Margin="5,0,0,0"
                                        FontWeight="SemiBold"
                                        Foreground="{StaticResource ApplicationAccentBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemContainerStyle" TargetType="ListViewItem">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="ListViewHeaderItemStyle" TargetType="ListViewHeaderItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,-1,0,0"/> <!-- changed from default style -->
        <Setter Property="Padding" Value="0"/> <!-- changed from default style -->
        <Setter Property="VerticalContentAlignment" Value="Stretch"/> <!-- changed from default style -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/> <!-- changed from default style -->
        <Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewHeaderItem">
                    <Grid 
                        behavior:ListViewHeaderManipulationDispatcher.IsEnabled="true"
                        Margin="{TemplateBinding Margin}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Foreground="{ThemeResource SystemControlHighlightAccentBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <!-- removed from default template -->
                        <!--<Rectangle HorizontalAlignment="Stretch" Height="1" Margin="12,0,12,0" Stroke="{ThemeResource SystemControlBackgroundBaseLowBrush}" StrokeThickness="0.5" VerticalAlignment="Bottom"/>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NavMenuListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter 
                        IsHitTestVisible="{Binding Converter={StaticResource NavigationMenuHitTestConverter}}"
                        CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" 
                        CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" 
                        ContentMargin="0" 
                        ContentTransitions="{TemplateBinding ContentTransitions}" 
                        CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}" 
                        DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" 
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                        DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}" 
                        PointerOverBackgroundMargin="0" 
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" 
                        PointerOverBackground="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}" 
                        ReorderHintOffset="12" 
                        SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}" 
                        SelectionCheckMarkVisualEnabled="False" 
                        SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" 
                        SelectedPointerOverBackground="Transparent" 
                        SelectedBorderThickness="0" 
                        SelectedBackground="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="TaskCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{ThemeResource CheckBoxContentForegroundThemeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderThemeBrush}"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Padding" Value="2,3,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppButtonPointerOverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppButtonPointerOverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard x:Name="CheckAnimation">
                                        <DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="CheckGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="CheckGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4" From="1"  To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="CheckGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="CheckGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" UseLayoutRounding="False" Width="21" Height="21" Margin="1,1,1,1"/>
                                <Path x:Name="CheckGlyph" Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" Height="14" Opacity="0.05" Stretch="Fill" Width="16" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <CompositeTransform/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
